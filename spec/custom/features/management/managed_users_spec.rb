require 'rails_helper'

feature 'Managed User' do

  background do
    login_as_manager
  end

  context "Currently managed user" do

    scenario "User is created with email as level three from scratch" do
      login_as_manager

      visit management_document_verifications_path
      fill_in 'document_verification_document_number', with: '12345678Z'
      click_button 'Check document'

      expect(page).to have_content "Please introduce the email used on the account"

      click_link 'Create a new account'

      fill_in 'user_username', with: 'pepe'
      fill_in 'user_email', with: 'pepe@gmail.com'
      fill_in 'user_lastname', with: 'mirza'
      fill_in 'user_firstname', with: 'zuliani'
      select "1997", from: "user_date_of_birth_1i"
      select "January", from: "user_date_of_birth_2i"
      select "10", from: "user_date_of_birth_3i"
      fill_in 'user_postal_code', with: '11000'

      click_button 'Create user'

      expect(page).to have_content "We have sent an email"
      expect(page).not_to have_content "Autogenerated password is"

      user = User.last
      within(".account-info") do
        expect(page).to have_content "Identified as"
        expect(page).to have_content user.username.to_s
        expect(page).to have_content user.email.to_s
        expect(page).to have_content user.document_number.to_s
      end
    end

    scenario "User is created without email as level three from scratch" do
      login_as_manager

      visit management_document_verifications_path
      fill_in 'document_verification_document_number', with: '12345678Z'
      click_button 'Check document'

      expect(page).to have_content "Please introduce the email used on the account"

      click_link 'Create a new account'

      fill_in 'user_username', with: 'peppa'
      fill_in 'user_email', with: ''
      fill_in 'user_lastname', with: 'mirza'
      fill_in 'user_firstname', with: 'zuliani'
      fill_in 'user_postal_code', with: '11000'
      select "1997", from: "user_date_of_birth_1i"
      select "January", from: "user_date_of_birth_2i"
      select "10", from: "user_date_of_birth_3i"

      click_button 'Create user'

      expect(page).not_to have_content "We have sent an email"
      expect(page).to have_content "Autogenerated password is"

      user = User.last
      within(".account-info") do
        expect(page).to have_content "Identified as"
        expect(page).to have_content user.username.to_s
        expect(page).to have_content user.document_number.to_s
      end
    end
  end

end
